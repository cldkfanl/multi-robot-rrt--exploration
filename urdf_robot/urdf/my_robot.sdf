<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from urdf_robot_sdf.urdf            | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="urdf_robot">
  <!-- body -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/base_link.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/base_link.STL"/>
      </geometry>
    </collision>
  </link>

  <link name="imu_link">
    <sensor name="tb3_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>200</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
          <remapping>~/out:=imu</remapping>
        </ros>
      </plugin>
    </sensor>
  </link>
  
  <!-- left wheel -->
  <link name="left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/left_wheel.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/left_wheel.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="left_wheel_joint" type="continuous">
    <origin rpy="1.5708 0.99646 0" xyz="0.04 -0.053 0.02"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <axis xyz="0 0 1"/>
  </joint>
  <!-- right wheel -->
  <link name="right_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/right_wheel.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/right_wheel.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="right_wheel_joint" type="continuous">
    <origin rpy="-1.5708 -0.66708 3.1416" xyz="0.04 0.053 0.02"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- lidar -->
  <link name="lidar">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/lidar.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://urdf_robot/meshes/lidar.STL"/>
      </geometry>
    </collision>
    <sensor name="hls_lfcd_lds" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <pose>-0.032 0 0.171 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>base_scan</frame_name>
      </plugin>
    </sensor>
  </link>
  <joint name="lidar_link" type="fixed">
    <origin rpy="1.5708 0 0" xyz="0 0 0.06"/>
    <parent link="base_link"/>
    <child link="lidar"/>
    <axis xyz="0 0 0"/>
  </joint>
  <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">
    <ros>
    <!-- <namespace>/tb3</namespace> -->
    </ros>

    <update_rate>30</update_rate>

    <!-- wheels -->
    <left_joint>wheel_left_joint</left_joint>
    <right_joint>wheel_right_joint</right_joint>

    <!-- kinematics -->
    <wheel_separation>0.160</wheel_separation>
    <wheel_diameter>0.066</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <command_topic>cmd_vel</command_topic>

    <!-- output -->
    <publish_odom>true</publish_odom>
    <publish_odom_tf>true</publish_odom_tf>
    <publish_wheel_tf>false</publish_wheel_tf>

    <odometry_topic>odom</odometry_topic>
    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_footprint</robot_base_frame>

  </plugin>

  <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
    <ros>
      <!-- <namespace>/tb3</namespace> -->
      <remapping>~/out:=joint_states</remapping>
    </ros>
    <update_rate>30</update_rate>
    <joint_name>wheel_left_joint</joint_name>
    <joint_name>wheel_right_joint</joint_name>
  </plugin>  
</robot>
